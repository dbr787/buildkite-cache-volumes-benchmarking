cache:
  name: "buildkite-cache-volumes-example"
  paths:
    - node_modules
    - .npm
env:
  NPM_CONFIG_CACHE: ".npm"
steps:
  - label: ":package: npm install example"
    command: |
      # Check cache status 
      if [ -d "node_modules" ] && [ "$$(ls -A node_modules 2>/dev/null)" ]; then
        CACHE_STATUS="ðŸŽ¯ Cache Hit"
        STYLE="success"
      else
        CACHE_STATUS="ðŸ’¨ Cache Miss"
        STYLE="warning"
      fi
      
      # Create package.json and run npm install
      cat > package.json <<'JSON'
      {
        "name": "demo",
        "version": "1.0.0",
        "dependencies": {
          "@tensorflow/tfjs": "4.20.0",
          "@playwright/test": "1.47.0",
          "firebase": "10.12.5",
          "aws-sdk": "2.1679.0",
          "@storybook/react": "8.2.9",
          "@babel/core": "7.25.2",
          "cypress": "13.13.3",
          "electron": "31.4.0",
          "webpack-dev-server": "5.0.4"
        }
      }
      JSON
      
      # Time the npm install
      START_TIME=$$(date +%s)
      npm install
      END_TIME=$$(date +%s)
      DURATION=$$((END_TIME - START_TIME))
      
      # Get node_modules size
      if [ -d "node_modules" ]; then
        NODE_MODULES_SIZE=$$(du -sh node_modules | cut -f1)
      else
        NODE_MODULES_SIZE="0B"
      fi
      
      # Show results with timing and size info
      buildkite-agent annotate --context "cache-example" --style "$$STYLE" "$$CACHE_STATUS
      \`node_modules: $$NODE_MODULES_SIZE\`
      \`duration: $${DURATION}s\`"
